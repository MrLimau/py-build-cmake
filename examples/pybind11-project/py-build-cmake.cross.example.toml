# This file shows how to cross-compile the module.
#
# Rename it to py-build-cmake.cross.toml, and edit the settings to match your
# setup. Then edit the CMake toolchain file as well, so that it selects the
# right compiler and sets the sysroot to point to a root filesystem folder
# containing a Python installation.
#
# Note that py-build-cmake cannot check that the Python version used by CMake
# matches the version and ABI specified here. It is therefore a good idea to
# hardcode the paths to the Python headers and library, either in your CMake
# toolchain file, or in this file, as shown below.
#
# For more information about cross-compilation, see
# https://tttapa.github.io/py-build-cmake/Cross-compilation.html and
# https://tttapa.github.io/Pages/Raspberry-Pi/C++-Development-RPiOS/index.html.

implementation = 'cp'
version = '39'
abi = 'cp39'
arch = 'linux_aarch64'
toolchain_file = 'aarch64-rpi3-linux-gnu.cmake'
copy_from_native_build = ['pybind11_project/*.pyi']

[cmake]
generator = 'Ninja Multi-Config'
config = ["Debug", "Release"]

[cmake.options]
Python3_LIBRARY = "/path-to-sysroot/usr/lib/aarch64-linux-gnu/libpython3.9.so"
Python3_INCLUDE_DIR = "/path-to-sysroot/usr/include/python3.9"
CMAKE_DEBUG_POSTFIX = '_d'
